
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JOptionPane;
import javax.swing.Timer;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author yunuspektas
 */
public class DosyaIndirme extends javax.swing.JFrame {
    private int say = 0;

    /**
     * Creates new form DosyaIndirme
     */
    public DosyaIndirme() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        checkprogress = new javax.swing.JProgressBar();
        dosyaindir = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Dosya İndirme Simulasyonu");
        setBounds(new java.awt.Rectangle(400, 400, 0, 0));

        checkprogress.setStringPainted(true);

        dosyaindir.setText("Dosya İndirmeyi Başlat");
        dosyaindir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dosyaindirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(162, 162, 162)
                .addComponent(dosyaindir)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(47, Short.MAX_VALUE)
                .addComponent(checkprogress, javax.swing.GroupLayout.PREFERRED_SIZE, 441, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addComponent(checkprogress, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43)
                .addComponent(dosyaindir)
                .addContainerGap(104, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void dosyaindirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dosyaindirActionPerformed
      //progressBAr dosya yüklenirken ilerleme aşamasını ifade eden kutu
      //progress ilerleme anlamında
      //progress barı ilerletmek için zamanlayıcıya ihtiyacımız var 
      //örnek 10ms 40ms de bir progress bar ilerlesin
        
        Timer timer = new Timer(50,null); //50 ms de bir çalışsın dedik
        //action listener kısmına timer her çalıştığında ne olacağını karar vermedik null başlattık
        
        timer.addActionListener(new ActionListener() { // burda timet her çalıştığında ne olacağına addActionlistener ile karar verdik
            @Override
            public void actionPerformed(ActionEvent e) {
         say++;
         
         checkprogress.setValue(say);
         
         if(checkprogress.getValue() == 100){
             //JOptionPane.showMessageDialog(DosyaIndirme.this, "Dosya indirme tamamlandı.");
            // artık progress bar dolduğunda mesaj ekranı değilde jrame çağrıcam
             
             timer.stop();
             
             SonucSayfasi sonucsayfasi = new SonucSayfasi();//jframe cinsinden frame çağırıdık
             
             // şu anki jframimi görünürlüğünü kapatıcam tanımladığımı sonucsayfası jramimi açıcam
             
             setVisible(false);
             
             sonucsayfasi.setVisible(true);
             
             
             
             

         }
                
            }
        }); 
        timer.start();
        
    }//GEN-LAST:event_dosyaindirActionPerformed

    //timerımız her çalıştığında 
         // sayımızı arttıracak ve progress barımıza .setValue komutuyla değerimizi ekliycez
    
    //timerımız her çalıştığında 
         // sayımızı arttıracak ve progress barımıza .setValue komutuyla değerimizi ekliycez
         
    
    
    
     //anonim classta olduğumuz için dosyaindirme.this ile kendi sınıfımızı ifade ettik yolunu verdik
             
           //  setVisible(false); // setVisible metodumuza false verirsek JFreamimizi görünmez yapar. O Ekranımızı görünmez yapar
    
    
    // timer.stop(); timer durur ve metodu çalışmaz
    
    //System.exit(0) ile tamamen programı kapatırız
    
    //progress bar dolsa indirme tamamlansa bile dosya indirildi joptionpanesi durmadan geri görünüyo. çünkü actionperformed metodu sonlanmadı
         //timerımız çalışıyor. bunu engellemek için setvisible dan sonra timer.stop() ile timerı durdurmalıyız 
    
    // anonim class tanımladık , addActionListener metodu ile timer her çalıştığında actionperformed metodu çalışacak bir işlem yapmak için tanımlanan metod
        //tanımladığımız  timer ile actionPerformed metoduyla progress barımızı ilerteceğiz
    
    
    
    
    
    
    
    
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DosyaIndirme.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DosyaIndirme.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DosyaIndirme.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DosyaIndirme.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DosyaIndirme().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JProgressBar checkprogress;
    private javax.swing.JButton dosyaindir;
    // End of variables declaration//GEN-END:variables
}
